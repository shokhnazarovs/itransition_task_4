[{"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Authenticate.js":"4","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Home.js":"5","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Login.js":"6","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Register.js":"7","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\AdminPanel.js":"8"},{"size":535,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1004,"mtime":1669707617369,"results":"12","hashOfConfig":"10"},{"size":1746,"mtime":1669401511923,"results":"13","hashOfConfig":"10"},{"size":1599,"mtime":1669701176215,"results":"14","hashOfConfig":"10"},{"size":1860,"mtime":1669707651622,"results":"15","hashOfConfig":"10"},{"size":2515,"mtime":1669659014756,"results":"16","hashOfConfig":"10"},{"size":5109,"mtime":1669700135010,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oldxjz",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\App.js",[],[],"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Authenticate.js",[],[],"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Home.js",["44"],[],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AdminPanel from \"./AdminPanel\";\r\n\r\nfunction Home() {\r\n    const [isPending, setPending] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    function logout(event){\r\n        fetch('/logout', {\r\n            method: 'GET',\r\n        })\r\n            .then(function(response) {\r\n                if(response.ok) {\r\n                    window.location.href = \"/\";\r\n                    return;\r\n                }\r\n                throw new Error('Request failed.');\r\n            })\r\n            .catch(function(error) {\r\n            console.log(\"fetching failed with error message: \", error);\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch('/data', {\r\n            method: 'GET'\r\n        })\r\n            .then(function(response) {\r\n                if(response.ok) {\r\n                    response.json().then(data=>{\r\n                        setUsers(data);\r\n                        setPending(false);\r\n                    })\r\n                } else { \r\n                    navigate('/login');\r\n                }\r\n            })\r\n            .catch(function(error) {\r\n            console.log(\"fetching failed with error message: \", error);\r\n        });\r\n    }, []);\r\n\r\n  return (\r\n    <div>\r\n        {isPending && <h1>Loading data</h1>}\r\n        {users && <AdminPanel users={users} setUsers={setUsers}/>}\r\n        <button onClick={logout} type=\"button\" class=\"btn btn-dark mt-4\">Log out</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Login.js",[],[],"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\Register.js",[],[],"C:\\Users\\User\\Desktop\\Projects\\itransition\\task_4\\client\\src\\AdminPanel.js",["45"],[],"import { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AdminPanel(props){\r\n    const [isPending, setPending] = useState(false);\r\n    const navigate = useNavigate();\r\n    function checkState(event){\r\n        let mainCheckBox = document.querySelector('#maincheckbox');\r\n        let checkBoxes = document.querySelectorAll('.selectuser');\r\n        let checkCounter = 0;\r\n        if(event.target.id === 'maincheckbox' && mainCheckBox.checked){\r\n            checkBoxes.forEach((box)=> box.checked = true);\r\n        } else if(event.target.id === 'maincheckbox' && !mainCheckBox.checkBoxes){\r\n            checkBoxes.forEach((box)=> box.checked = false);\r\n        }\r\n        checkBoxes.forEach((box)=>{\r\n            if(box.checked) checkCounter = checkCounter + 1;\r\n        });\r\n\r\n        if(checkCounter > 0){\r\n            document.querySelector('#toolbar').classList.remove('disabled');\r\n            if(checkBoxes.length === checkCounter){\r\n                mainCheckBox.checked = true;\r\n            } else {\r\n                mainCheckBox.checked = false;\r\n            }\r\n        } else {\r\n            document.querySelector('#toolbar').classList.add('disabled');\r\n        }\r\n    }\r\n\r\n    function handleClick(event){\r\n        setPending(true);\r\n        let selectedItems = [];\r\n        let checkBoxes = document.querySelectorAll('.selectuser');\r\n\r\n        checkBoxes.forEach(item => {\r\n            if(item.checked) selectedItems.push(item.id);\r\n        });\r\n\r\n        fetch('/update', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\r\n            body: JSON.stringify({\r\n                data: selectedItems,\r\n                action: event.currentTarget.name\r\n            })\r\n          })\r\n            .then(function(response) {\r\n              setPending(false);\r\n              if(response.ok) {\r\n                response.json().then(data=>{\r\n                    props.setUsers(data);\r\n                });\r\n              } else {\r\n                window.location.reload(true);\r\n              }\r\n            })\r\n            .catch(function(error) {\r\n              console.log(\"fetching failed with error message: \", error);\r\n              setPending(false);\r\n            });\r\n    }\r\n    const users = props.users;\r\n    const tableRows = users.map((user) => \r\n        <tr key={user._id}>\r\n            <th onChange={checkState} scope=\"row\"><input id={user._id} className=\"selectuser\" type=\"checkbox\" /></th>\r\n            <td>{user._id}</td>\r\n            <td>{user.fname} {user.lname}</td>\r\n            <td>{user.email}</td>\r\n            <td>{(new Date(user.regtime)).toLocaleString()}</td>\r\n            <td>{(new Date(user.logtime)).toLocaleString()}</td>\r\n            <td>{user.status}</td>\r\n        </tr>\r\n    );\r\n\r\n    return (\r\n        <div className='container'>\r\n            {isPending && <h1>Updating...</h1>}\r\n            <div className='container my-3 disabled' id=\"toolbar\">\r\n                <button onClick={handleClick} name=\"block\" type=\"button\" className=\"btn btn-danger mx-1 px-4\">Block</button>\r\n                <button onClick={handleClick} name=\"unblock\" className='btn btn-secondary mx-1 px-4'><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-unlock-fill\" viewBox=\"0 0 16 16\"><path d=\"M11 1a2 2 0 0 0-2 2v4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h5V3a3 3 0 0 1 6 0v4a.5.5 0 0 1-1 0V3a2 2 0 0 0-2-2z\"/></svg></button>\r\n                <button onClick={handleClick} name=\"delete\" className='btn btn-secondary mx-1 px-4'><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\"><path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/></svg></button>\r\n            </div>\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">\r\n                                <div>Select all</div>\r\n                                <div><input onChange={checkState} type=\"checkbox\" id='maincheckbox' /></div>\r\n                            </th>\r\n                            <th scope=\"col\">ID</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Registration time</th>\r\n                            <th scope=\"col\">Last login time</th>\r\n                            <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table-group-divider\">\r\n                        {tableRows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPanel;",{"ruleId":"46","severity":1,"message":"47","line":43,"column":8,"nodeType":"48","endLine":43,"endColumn":10,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":6,"column":11,"nodeType":"52","messageId":"53","endLine":6,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar",{"desc":"55","fix":"56"},"Update the dependencies array to be: [navigate]",{"range":"57","text":"58"},[1320,1322],"[navigate]"]